# token_loader.py
import os

def load_bot_tokens():
    """
    Loads bot tokens from environment variables or fallback file.
    Returns:
        tuple: (admin_token, customer_token)
    Raises:
        ValueError: If tokens are missing or invalid.
    """
    # Attempt to load from environment variables first
    admin_token = os.getenv("ADMIN_BOT_TOKEN")
    customer_token = os.getenv("CUSTOMER_BOT_TOKEN")

    # If tokens are missing, fallback to secret.env.txt
    if not admin_token or not customer_token:
        try:
            with open("config/secret.env.txt", "r", encoding="utf-8") as file:
                lines = file.readlines()
                tokens = {line.split('=')[0]: line.split('=')[1].strip() for line in lines if '=' in line}
                admin_token = tokens.get("ADMIN_BOT_TOKEN", admin_token)
                customer_token = tokens.get("CUSTOMER_BOT_TOKEN", customer_token)
        except FileNotFoundError:
            raise ValueError("❌ Token file 'secret.env.txt' not found!")
        except Exception as e:
            raise ValueError(f"❌ Error reading token file: {e}")

    # Validate that both tokens are loaded
    if not admin_token:
        raise ValueError("❌ Admin Bot token is missing! Ensure it is set.")
    if not customer_token:
        raise ValueError("❌ Customer Bot token is missing! Ensure it is set.")

    return admin_token, customer_token
